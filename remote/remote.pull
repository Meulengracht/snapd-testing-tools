#!/bin/bash -e

show_help() {
    echo "usage: remote.pull <REMOTE_PATH> <LOCAL_PATH>"
    echo ""
    echo "Available options:"
    echo "  -h --help   show this help message."
    echo ""
}

_load_config() {
    CFG_FILE="$(remote.setup get-config-path)"
    if [ ! -f "$CFG_FILE" ]; then
        echo "remote.pull: config file \"$CFG_FILE\" not found, please run remote.setup setup first"
        return 0
    fi
    . "$CFG_FILE"
}

_get_pass() {
    SSH_PASS=""
    if [ -n "$TESTS_REMOTE_PASS" ]; then
        echo "sshpass -p $TESTS_REMOTE_PASS"
    fi
}

_get_cert() {
    if [ -n "$TESTS_REMOTE_PASS" ]; then
        return
    elif [ -n "$TESTS_REMOTE_CERT" ]; then
        echo "-i $TESTS_REMOTE_CERT"
    fi
}

remote_pull() {
    REMOTE_PATH=$1
    LOCAL_PATH=$2
    if [ -z "$LOCAL_PATH" ] || [ -z "$REMOTE_PATH" ]; then
        echo "remote.pull: local and remote paths are required"
    fi

    SSH_PASS="$(_get_pass)"
    SSH_CERT="$(_get_cert)"

    "$SSH_PASS" scp "$SSH_CERT" -P "$TESTS_REMOTE_PORT" -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$TESTS_REMOTE_USER"@"$TESTS_REMOTE_HOST":"$1" "$2"
}

main() {
    if [ $# -eq 0 ]; then
        show_help
        exit 0
    fi

    _load_config
    remote_pull "$@"
}

main "$@"
